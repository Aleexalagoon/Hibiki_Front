apiVersion: v1
kind: Namespace
metadata:
  name: hibiki
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hibiki-config
  namespace: hibiki
data:
  API_URL: "http://hibikiapi.retocsv.es/api"
  NODE_ENV: "production"
---
apiVersion: v1
kind: Secret
metadata:
  name: hibiki-secrets
  namespace: hibiki
type: Opaque
stringData:
  API_KEY: "your-api-key-here"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hibiki-deployment
  namespace: hibiki
  labels:
    app: hibiki
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hibiki
  template:
    metadata:
      labels:
        app: hibiki
    spec:
      containers:
      - name: hibiki
        image: alejandroalagon33/sanvalero:hibikifront
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        env:
        - name: API_URL
          valueFrom:
            configMapKeyRef:
              name: hibiki-config
              key: API_URL
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: hibiki-config
              key: NODE_ENV
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: hibiki-secrets
              key: API_KEY
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: hibiki-service
  namespace: hibiki
spec:
  selector:
    app: hibiki
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hibiki-ingress
  namespace: hibiki
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: hibiki.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hibiki-service
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hibiki-hpa
  namespace: hibiki
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hibiki-deployment
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80